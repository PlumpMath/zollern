;;; Sieve of Eratosthenes

(const syscall_write 1)
(const stdout 1)
(const newline 0x0A)

(const mem:start 4096)
(const mem:strbuf mem:start)
(const mem:intbuf (+ mem:strbuf 512))

(const N 1000)

(fun (write buf len)
  (return (syscall syscall_write stdout buf len)))

(fun (strlen str)
  (var l 0)
again
  (goto done (not (b@ str l)))
  (= l (+ l 1))
  (goto again)
done
  (return l))

(fun (strint buf i)
  (var p buf)
  (var b buf)
  (var t)
next-digit
  (b@= p (+ (% i 10) 48))
  (= p (+ p 1))
  (= i (/ i 10))
  (goto next-digit i)
  (b@= p 0)
reverse-next
  (= p (- p 1))
  (= t (b@ b))
  (b@= b (b@ p))
  (b@= p t)
  (= b (+ b 1))
  (goto reverse-next (> p b)))

(fun (init-intbuf)
  (var i 0)
again
  (goto done (> i N))
  (b@= mem:intbuf i 0)
  (= i (+ i 1))
  (goto again)
done)

(fun (print-intbuf)
  (var i 2)
again
  (goto done (> i N))
  (goto skip (b@ mem:intbuf i))
  (strint mem:strbuf i)
  (write mem:strbuf (strlen mem:strbuf))
  (write str:newline 1)
skip
  (= i (+ i 1))
  (goto again)
done)

(fun (set-intbuf f)
  (var i (+ f f))
again
  (goto done (> i N))
  (b@= mem:intbuf i 1)
  (= i (+ i f))
  (goto again)
done)

(fun (sieve-intbuf)
  (var p 2)
again
  (goto done (> (* p p) N))
  (goto skip (b@ mem:intbuf p))
  (set-intbuf p)
skip
  (= p (+ p 1))
  (goto again)
done)

(fun (main)
  (write str:primes (strlen str:primes))
  (init-intbuf)
  (sieve-intbuf)
  (print-intbuf))

(data str:primes (s 'Prime numbers:') (b newline 0))
(data str:newline (b newline 0))
