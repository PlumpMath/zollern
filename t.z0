;; Utilities

(def (seq ?f ?start ?inc ?a)
  (?f ?a ?start))

(def (seq ?f ?start ?inc ?a ?b . ?rest)
  (begin (?f ?a ?start) (seq ?f (+ ?start ?inc) ?inc ?b . ?rest)))

(def (defenum . ?rest)
  (seq def 0 1 . ?rest))

;; Registers

(def r0 (reg 0))
(def r1 (reg 1))
(def r2 (reg 2))
(def r3 (reg 3))
(def r4 (reg 4))
(def r5 (reg 5))
(def r6 (reg 6))
(def r7 (reg 7))

;; Characters

(defenum
  ;; 0x00
  :nul :soh :stx :etx :eot :enq :ack :bel
  :bs  :ht  :nl  :vt  :np  :cr  :so  :si
  :dle :dc1 :dc2 :dc3 :dc4 :nak :syn :etb
  :can :em  :sub :esc :fs  :gs  :rs  :us

  ;; 0x20
  :spc :!   :dq  :#   :$   :%   :&   :sq
  :lp  :rp  :*   :+   :,   :-   :.   :/
  :0   :1   :2   :3   :4   :5   :6   :7
  :8   :9   ::   :sc  :<   :=   :>   :?

  ;; 0x40
  :@   :A   :B   :C   :D   :E   :F   :G
  :H   :I   :J   :K   :L   :M   :N   :O
  :P   :Q   :R   :S   :T   :U   :V   :W
  :X   :Y   :Z   :[   :bsl :]   :^   :_

  ;; 0x60
  :bt  :a   :b   :c   :d   :e   :f   :g
  :h   :i   :j   :k   :l   :m   :n   :o
  :p   :q   :r   :s   :t   :u   :v   :w
  :x   :y   :z   :{   :bar :}   :~   :del)

;; Instructions

(def (set (reg ?dst) ?val)
  (1 0x48 0xc7 (+ 0xc0 ?dst))
  (4 ?val))

(def (set (reg ?dst) (reg ?src))
  (1 0x48 0x89 (+ 0xc0 ?dst (* ?src 8))))

(def (call ?addr)
  (1 0xe8)
  (-4 ?addr))

(def (ret)
  (1 0xc3))

(def (syscall)
  (1 0x0F 0x05))

;; Init

(code start
  (call main)
  (call exit))

;; Syscalls

;; Args go to r7, r6, r2, r10, r8, r9, number to r0.

(def (defsyscall ?func ?num)
  (code ?func
    (set r7 r0)
    (set r6 r1)
    (set r0 ?num)
    (syscall)
    (ret)))

(defsyscall write  1)
(defsyscall exit  60)

(code main
  (set r0 0)
  (set r1 message)
  (set r2 (- message:end message))
  (call write)
  (set r0 0)
  (ret))

(code
message
  (1 "Hello World" :nl)
message:end)
