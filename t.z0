;; Utilities

(code strlen
  (set l1 l0)
  (jmp .test)
.loop
  (add l0 1)
.test
  (set l2 (u8 l0))
  (cmp l2 0)
  (jne .loop)
  (sub l0 l1)
  (ret))

;; Syscalls

;; Args go to rdi, rsi, rdx, r10, r8, r9, number to rax.
;; Our names: l4,  l3,  l2,  l7,  l5, l6, number to l0.
;; Args:      l0,  l1,  l2,  l3,  l4, l5

(def (defsyscall ?func ?nsys ?nargs)
  (code ?func
    (if (>= ?nargs 4)
      (set l7 l3))  ; r10
    (if (>= ?nargs 1)
      (set l4 l0))  ; rdi
    (if (>= ?nargs 2)
      (set l3 l1))  ; rsi
    ;; (set rdx l2) rdx = l2
    (if (>= ?nargs 6)
      (set l6 l5))  ; r9
    (if (>= ?nargs 5)
      (set l5 l4))  ; r8
    (set l0 ?nsys)
    (syscall)
    (ret)))

(defsyscall write  1  3)
(defsyscall exit  60  1)

(code print
  (push l0)
  (call strlen)
  (set l2 l0)
  (set l0 1)
  (pop l1)
  (jmp write))

(code main
  (set l0 message)
  (call print)
  (set l0 0)
  (call exit))

(code message
  (1 "Hello World" :nl 0))
